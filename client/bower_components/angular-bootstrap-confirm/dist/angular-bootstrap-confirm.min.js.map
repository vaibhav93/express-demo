{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///angular-bootstrap-confirm.min.js","webpack:///webpack/bootstrap 1eb9bf9519a53bf0e510","webpack:///./src/angular-bootstrap-confirm.js","webpack:///external \"angular\"","webpack:///external \"angular-bootstrap\"","webpack:///external \"angular-sanitize\""],"names":["root","factory","exports","module","require","define","amd","a","i","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","__WEBPACK_EXTERNAL_MODULE_3__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","angular","controller","$scope","$element","$compile","$document","$window","$timeout","$position","confirmationPopoverDefaults","positionPopover","position","positionElements","popover","vm","popoverPlacement","top","left","css","showPopover","isVisible","display","isOpen","hidePopover","togglePopover","$apply","documentClick","event","contains","target","defaults","placement","template","join","element","find","append","$watch","bind","addEventListener","$on","remove","unbind","removeEventListener","directive","restrict","bindToController","scope","confirmText","cancelText","message","title","onConfirm","onCancel","confirmButtonType","cancelButtonType","value","name"],"mappings":"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","file":"angular-bootstrap-confirm.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"angular-bootstrap\"), require(\"angular-sanitize\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"angular-bootstrap\", \"angular-sanitize\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\"), require(\"angular-bootstrap\"), require(\"angular-sanitize\")) : factory(root[\"angular\"], root[\"angular-bootstrap\"], root[\"angular-sanitize\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","/**\n * angular-bootstrap-confirm - Displays a bootstrap confirmation popover when clicking the given element.\n * @version v0.3.1\n * @link https://github.com/mattlewis92/angular-bootstrap-confirm\n * @license MIT\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"), require(\"angular-bootstrap\"), require(\"angular-sanitize\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"angular\", \"angular-bootstrap\", \"angular-sanitize\"], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"angular\"), require(\"angular-bootstrap\"), require(\"angular-sanitize\")) : factory(root[\"angular\"], root[\"angular-bootstrap\"], root[\"angular-sanitize\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__, __WEBPACK_EXTERNAL_MODULE_3__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tvar angular = __webpack_require__(1);\n\t__webpack_require__(3);\n\t__webpack_require__(2);\n\t\n\tmodule.exports = angular\n\t\n\t  .module('mwl.confirm', [\n\t    'ngSanitize',\n\t    'ui.bootstrap.position'\n\t  ])\n\t\n\t  .controller('PopoverConfirmCtrl', [\"$scope\", \"$element\", \"$compile\", \"$document\", \"$window\", \"$timeout\", \"$position\", \"confirmationPopoverDefaults\", function($scope, $element, $compile, $document, $window, $timeout, $position, confirmationPopoverDefaults) {\n\t    var vm = this;\n\t    vm.defaults = confirmationPopoverDefaults;\n\t    vm.popoverPlacement = vm.placement || vm.defaults.placement;\n\t\n\t    var template = [\n\t      '<div class=\"popover\" ng-class=\"vm.popoverPlacement\">',\n\t        '<div class=\"arrow\"></div>',\n\t        '<h3 class=\"popover-title\" ng-bind-html=\"vm.title\"></h3>',\n\t        '<div class=\"popover-content\">',\n\t          '<p ng-bind-html=\"vm.message\"></p>',\n\t          '<div class=\"row\">',\n\t            '<div class=\"col-xs-6\">',\n\t              '<button class=\"btn btn-block\" ng-class=\"\\'btn-\\' + (vm.confirmButtonType || vm.defaults.confirmButtonType)\" ' +\n\t              'ng-click=\"vm.onConfirm(); vm.hidePopover()\" ng-bind-html=\"vm.confirmText || vm.defaults.confirmText\"></button>',\n\t            '</div>',\n\t            '<div class=\"col-xs-6\">',\n\t              '<button class=\"btn btn-block\" ng-class=\"\\'btn-\\' + (vm.cancelButtonType || vm.defaults.cancelButtonType)\" ' +\n\t              'ng-click=\"vm.onCancel(); vm.hidePopover()\" ng-bind-html=\"vm.cancelText || vm.defaults.cancelText\"></button>',\n\t            '</div>',\n\t          '</div>',\n\t        '</div>',\n\t      '</div>'\n\t    ].join('\\n');\n\t\n\t    var popover = angular.element(template);\n\t    popover.css('display', 'none');\n\t    $compile(popover)($scope);\n\t    $document.find('body').append(popover);\n\t\n\t    vm.isVisible = false;\n\t\n\t    function positionPopover() {\n\t      var position = $position.positionElements($element, popover, vm.popoverPlacement, true);\n\t      position.top += 'px';\n\t      position.left += 'px';\n\t      popover.css(position);\n\t    }\n\t\n\t    function showPopover() {\n\t      if (!vm.isVisible) {\n\t        popover.css({display: 'block'});\n\t        positionPopover();\n\t        vm.isVisible = true;\n\t      }\n\t      vm.isOpen = true;\n\t    }\n\t\n\t    function hidePopover() {\n\t      if (vm.isVisible) {\n\t        popover.css({display: 'none'});\n\t        vm.isVisible = false;\n\t      }\n\t      vm.isOpen = false;\n\t    }\n\t\n\t    function togglePopover() {\n\t      if (!vm.isVisible) {\n\t        showPopover();\n\t      } else {\n\t        hidePopover();\n\t      }\n\t      $scope.$apply();\n\t    }\n\t\n\t    function documentClick(event) {\n\t      if (vm.isVisible && !popover[0].contains(event.target) && !$element[0].contains(event.target)) {\n\t        hidePopover();\n\t        $scope.$apply();\n\t      }\n\t    }\n\t\n\t    vm.showPopover = showPopover;\n\t    vm.hidePopover = hidePopover;\n\t    vm.togglePopover = togglePopover;\n\t\n\t    $scope.$watch('vm.isOpen', function(isOpen) {\n\t      $timeout(function() { //timeout required so that documentClick() event doesn't fire and close it\n\t        if (isOpen) {\n\t          showPopover();\n\t        } else {\n\t          hidePopover();\n\t        }\n\t      });\n\t    });\n\t\n\t    $element.bind('click', togglePopover);\n\t\n\t    $window.addEventListener('resize', positionPopover);\n\t\n\t    $document.bind('click', documentClick);\n\t    $document.bind('touchend', documentClick);\n\t\n\t    $scope.$on('$destroy', function() {\n\t      popover.remove();\n\t      $element.unbind('click', togglePopover);\n\t      $window.removeEventListener('resize', positionPopover);\n\t      $document.unbind('click', documentClick);\n\t      $document.unbind('touchend', documentClick);\n\t    });\n\t\n\t  }])\n\t\n\t  .directive('mwlConfirm', function() {\n\t\n\t    return {\n\t      restrict: 'EA',\n\t      controller: 'PopoverConfirmCtrl as vm',\n\t      bindToController: true,\n\t      scope: {\n\t        confirmText: '@',\n\t        cancelText: '@',\n\t        message: '@',\n\t        title: '@',\n\t        placement: '@',\n\t        onConfirm: '&',\n\t        onCancel: '&',\n\t        confirmButtonType: '@',\n\t        cancelButtonType: '@',\n\t        isOpen: '=?'\n\t      }\n\t    };\n\t  })\n\t\n\t  .value('confirmationPopoverDefaults', {\n\t    confirmText: 'Confirm',\n\t    cancelText: 'Cancel',\n\t    confirmButtonType: 'success',\n\t    cancelButtonType: 'default',\n\t    placement: 'top'\n\t  })\n\t\n\t  .name;\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** angular-bootstrap-confirm.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 1eb9bf9519a53bf0e510\n **/","'use strict';\n\nvar angular = require('angular');\nrequire('angular-sanitize');\nrequire('./ui-bootstrap-position');\n\nmodule.exports = angular\n\n  .module('mwl.confirm', [\n    'ngSanitize',\n    'ui.bootstrap.position'\n  ])\n\n  .controller('PopoverConfirmCtrl', [\"$scope\", \"$element\", \"$compile\", \"$document\", \"$window\", \"$timeout\", \"$position\", \"confirmationPopoverDefaults\", function($scope, $element, $compile, $document, $window, $timeout, $position, confirmationPopoverDefaults) {\n    var vm = this;\n    vm.defaults = confirmationPopoverDefaults;\n    vm.popoverPlacement = vm.placement || vm.defaults.placement;\n\n    var template = [\n      '<div class=\"popover\" ng-class=\"vm.popoverPlacement\">',\n        '<div class=\"arrow\"></div>',\n        '<h3 class=\"popover-title\" ng-bind-html=\"vm.title\"></h3>',\n        '<div class=\"popover-content\">',\n          '<p ng-bind-html=\"vm.message\"></p>',\n          '<div class=\"row\">',\n            '<div class=\"col-xs-6\">',\n              '<button class=\"btn btn-block\" ng-class=\"\\'btn-\\' + (vm.confirmButtonType || vm.defaults.confirmButtonType)\" ' +\n              'ng-click=\"vm.onConfirm(); vm.hidePopover()\" ng-bind-html=\"vm.confirmText || vm.defaults.confirmText\"></button>',\n            '</div>',\n            '<div class=\"col-xs-6\">',\n              '<button class=\"btn btn-block\" ng-class=\"\\'btn-\\' + (vm.cancelButtonType || vm.defaults.cancelButtonType)\" ' +\n              'ng-click=\"vm.onCancel(); vm.hidePopover()\" ng-bind-html=\"vm.cancelText || vm.defaults.cancelText\"></button>',\n            '</div>',\n          '</div>',\n        '</div>',\n      '</div>'\n    ].join('\\n');\n\n    var popover = angular.element(template);\n    popover.css('display', 'none');\n    $compile(popover)($scope);\n    $document.find('body').append(popover);\n\n    vm.isVisible = false;\n\n    function positionPopover() {\n      var position = $position.positionElements($element, popover, vm.popoverPlacement, true);\n      position.top += 'px';\n      position.left += 'px';\n      popover.css(position);\n    }\n\n    function showPopover() {\n      if (!vm.isVisible) {\n        popover.css({display: 'block'});\n        positionPopover();\n        vm.isVisible = true;\n      }\n      vm.isOpen = true;\n    }\n\n    function hidePopover() {\n      if (vm.isVisible) {\n        popover.css({display: 'none'});\n        vm.isVisible = false;\n      }\n      vm.isOpen = false;\n    }\n\n    function togglePopover() {\n      if (!vm.isVisible) {\n        showPopover();\n      } else {\n        hidePopover();\n      }\n      $scope.$apply();\n    }\n\n    function documentClick(event) {\n      if (vm.isVisible && !popover[0].contains(event.target) && !$element[0].contains(event.target)) {\n        hidePopover();\n        $scope.$apply();\n      }\n    }\n\n    vm.showPopover = showPopover;\n    vm.hidePopover = hidePopover;\n    vm.togglePopover = togglePopover;\n\n    $scope.$watch('vm.isOpen', function(isOpen) {\n      $timeout(function() { //timeout required so that documentClick() event doesn't fire and close it\n        if (isOpen) {\n          showPopover();\n        } else {\n          hidePopover();\n        }\n      });\n    });\n\n    $element.bind('click', togglePopover);\n\n    $window.addEventListener('resize', positionPopover);\n\n    $document.bind('click', documentClick);\n    $document.bind('touchend', documentClick);\n\n    $scope.$on('$destroy', function() {\n      popover.remove();\n      $element.unbind('click', togglePopover);\n      $window.removeEventListener('resize', positionPopover);\n      $document.unbind('click', documentClick);\n      $document.unbind('touchend', documentClick);\n    });\n\n  }])\n\n  .directive('mwlConfirm', function() {\n\n    return {\n      restrict: 'EA',\n      controller: 'PopoverConfirmCtrl as vm',\n      bindToController: true,\n      scope: {\n        confirmText: '@',\n        cancelText: '@',\n        message: '@',\n        title: '@',\n        placement: '@',\n        onConfirm: '&',\n        onCancel: '&',\n        confirmButtonType: '@',\n        cancelButtonType: '@',\n        isOpen: '=?'\n      }\n    };\n  })\n\n  .value('confirmationPopoverDefaults', {\n    confirmText: 'Confirm',\n    cancelText: 'Cancel',\n    confirmButtonType: 'success',\n    cancelButtonType: 'default',\n    placement: 'top'\n  })\n\n  .name;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/angular-bootstrap-confirm.js\n ** module id = 0\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular-bootstrap\"\n ** module id = 2\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_3__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"angular-sanitize\"\n ** module id = 3\n ** module chunks = 0\n **/"],"sourceRoot":""}